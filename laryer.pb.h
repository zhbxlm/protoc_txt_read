// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: laryer.proto

#ifndef PROTOBUF_laryer_2eproto__INCLUDED
#define PROTOBUF_laryer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace laryer {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_laryer_2eproto();
void protobuf_AssignDesc_laryer_2eproto();
void protobuf_ShutdownFile_laryer_2eproto();

class LayerTest;

// ===================================================================

class LayerTest : public ::google::protobuf::Message {
 public:
  LayerTest();
  virtual ~LayerTest();

  LayerTest(const LayerTest& from);

  inline LayerTest& operator=(const LayerTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LayerTest& default_instance();

  void Swap(LayerTest* other);

  // implements Message ----------------------------------------------

  LayerTest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LayerTest& from);
  void MergeFrom(const LayerTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline ::google::protobuf::int32 name() const;
  inline void set_name(::google::protobuf::int32 value);

  // repeated float data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline float data(int index) const;
  inline void set_data(int index, float value);
  inline void add_data(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      data() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:laryer.LayerTest)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > data_;
  ::google::protobuf::int32 name_;
  friend void  protobuf_AddDesc_laryer_2eproto();
  friend void protobuf_AssignDesc_laryer_2eproto();
  friend void protobuf_ShutdownFile_laryer_2eproto();

  void InitAsDefaultInstance();
  static LayerTest* default_instance_;
};
// ===================================================================


// ===================================================================

// LayerTest

// optional int32 name = 1;
inline bool LayerTest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LayerTest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LayerTest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LayerTest::clear_name() {
  name_ = 0;
  clear_has_name();
}
inline ::google::protobuf::int32 LayerTest::name() const {
  // @@protoc_insertion_point(field_get:laryer.LayerTest.name)
  return name_;
}
inline void LayerTest::set_name(::google::protobuf::int32 value) {
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:laryer.LayerTest.name)
}

// repeated float data = 2;
inline int LayerTest::data_size() const {
  return data_.size();
}
inline void LayerTest::clear_data() {
  data_.Clear();
}
inline float LayerTest::data(int index) const {
  // @@protoc_insertion_point(field_get:laryer.LayerTest.data)
  return data_.Get(index);
}
inline void LayerTest::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:laryer.LayerTest.data)
}
inline void LayerTest::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:laryer.LayerTest.data)
}
inline const ::google::protobuf::RepeatedField< float >&
LayerTest::data() const {
  // @@protoc_insertion_point(field_list:laryer.LayerTest.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
LayerTest::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:laryer.LayerTest.data)
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace laryer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_laryer_2eproto__INCLUDED
